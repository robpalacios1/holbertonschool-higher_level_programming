=============================
The ``0-add_integer`` module
=============================

Using ``add_integer``
-----------------------------

First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__("0-add_integer").add_integer

Normal cases:
-----------------------------

    >>> add_integer(1, 2)
    3
    >>> add_integer(123456789876543212345678976543234567, 2123456789876543212345678765432134567876543)
    2123456913333333088888891111111111111111110
    >>> add_integer(-100, -55)
    -155
    >>> add_integer(-100, 255)
    155
    >>> a = 8
    >>> add_integer(a, 2)
    10

Float Cases:
-----------------------------

    >>> add_integer(-100.45, 25.56)
    -75
    >>> add_integer(-123456787654.9876543234567, 98765434567.97656789)
    -24691353087

Error Cases:
-----------------------------

    >>> add_integer("a", 2)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer([2, 4, 5], 2)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer(None, None)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer(b, 2)
    Traceback (most recent call last):
    NameError: name 'b' is not defined
    >>> add_integer(float('inf'), 2)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(10, (1, 1))
    Traceback (most recent call last):
    TypeError: b must be an integer
    >>> add_integer(98, "Holberton")
    Traceback (most recent call last):
    TypeError: b must be an integer
